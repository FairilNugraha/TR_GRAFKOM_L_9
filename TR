#include <windows.h>
#include <GL/glu.h>
#include <GL/glut.h>
#include <stdio.h>
#include <math.h>

float xrot = 0.0f;
float yrot = 0.0f;
float xdiff = 0.0f;
float ydiff = 0.0f;
bool mouseDown = false;
int is_depth;

void lapangan(void)
{
    glBegin(GL_POLYGON);//lapangan
    glColor3ub(0, 189, 9);
    glVertex3f(-22.5,-10.0,-35.0);glVertex3f(-22.5,-10.0,35.0);
    glVertex3f(22.5,-10.0,35.0);glVertex3f(22.5,-10.0,-35.0);
    glEnd();
}
void detailinglapangan(void)
{
    glPushMatrix();//bola
    glColor3ub(255, 0, 0);
    glTranslatef(0, -9.7, 0);
    glutSolidSphere(0.3, 20, 16);
    glPopMatrix();
    glEnd();
    glLineWidth(2.0f);
    glBegin(GL_POLYGON);//alas base
    glColor3ub(122, 113, 113);
    glVertex3f(-100,-10.6,-100);
    glVertex3f(100,-10.6,-100);
    glVertex3f(100,-10.6,100);
    glVertex3f(-100,-10.6,100);
    glEnd();
    glBegin(GL_LINE_LOOP); //garis tepi lapangan
    glColor3ub(255, 255, 255);
    glVertex3f(-17.5,-9.97,-30.0);
    glVertex3f(-17.5,-9.97,30.0);
    glVertex3f(17.5,-9.97,30.0);
    glVertex3f(17.5,-9.97,-30.0);
    glEnd();
    glBegin(GL_LINE_STRIP);// garis tengah
    glColor3ub(255, 255, 255);
    glVertex3f(-17.5,-9.97,0);
    glVertex3f(17.5,-9.97,0);
    glEnd();
    glBegin(GL_LINE_STRIP); //garis gawang 1
    glColor3ub(255, 255, 255);
    glVertex3f(-7.5,-9.97,-30.0);
    glVertex3f(-7.5,-9.97,-24.0);
    glVertex3f(7.5,-9.97,-24.0);
    glVertex3f(7.5,-9.97,-30.0);
    glEnd();
    glBegin(GL_LINE_STRIP); //garis gawang 2
    glColor3ub(255, 255, 255);
    glVertex3f(-7.5,-9.97,30.0);
    glVertex3f(-7.5,-9.97,24.0);
    glVertex3f(7.5,-9.97,24.0);
    glVertex3f(7.5,-9.97,30.0);
    glEnd();
    glBegin(GL_LINE_STRIP); //gawang 1
    glColor3ub(255, 255, 255);
    glVertex3f(-3.5,-9.97,-30.05);
    glVertex3f(-3.5,-5.97,-30.05);
    glVertex3f(3.5,-5.97,-30.05);
    glVertex3f(3.5,-9.97,-30.05);
    glEnd();
    glBegin(GL_LINE_STRIP); //gawang 2
    glColor3ub(255, 255, 255);
    glVertex3f(-3.5,-9.97,30.05);
    glVertex3f(-3.5,-5.97,30.05);
    glVertex3f(3.5,-5.97,30.05);
    glVertex3f(3.5,-9.97,30.05);
    glEnd();
    glBegin(GL_LINE_STRIP); //titik tengah
    glColor3ub(255, 255, 255);
    glVertex3f(0.35,-9.97,-0.35);
    glVertex3f(-0.35,-9.97,0.35);
    glEnd();
    glBegin(GL_LINE_STRIP); //titik tengah
    glColor3ub(255, 255, 255);
    glVertex3f(-0.35,-9.97,-0.35);
    glVertex3f(0.35,-9.97,0.35);
    glEnd();
    glBegin(GL_LINE_STRIP); //titik tengah
    glColor3ub(255, 255, 255);
    glVertex3f(0,-9.97,-0.4);
    glVertex3f(0,-9.97,0.4);
    glEnd();

}
void bataslapangan(void)
{
    glBegin(GL_POLYGON);//batas kiri dalam
    glColor3ub(106, 115, 106);
    glVertex3f(-22.51,-7.0,-31.0);glVertex3f(-22.51,-7.0,31.0);
    glVertex3f(-22.51,-10.0,31.0);glVertex3f(-22.51,-10.0,-31.0);
    glEnd();
    glBegin(GL_POLYGON);//batas blkg dalam
    glColor3ub(106, 115, 106);
    glVertex3f(-18.5,-7.0,-35.01);glVertex3f(18.5,-7.0,-35.01);
    glVertex3f(18.5,-10.0,-35.01);glVertex3f(-18.5,-10.0,-35.01);
    glEnd();
    glBegin(GL_POLYGON);//batas kanan dalam
    glColor3ub(106, 115, 106);
    glVertex3f(22.51,-7.0,-31.0);glVertex3f(22.51,-7.0,31.0);
    glVertex3f(22.51,-10.0,31.0);glVertex3f(22.51,-10.0,-31.0);
    glEnd();
    glBegin(GL_POLYGON);//batas depan dalam
    glColor3ub(106, 115, 106);
    glVertex3f(-18.5,-7.0,35.01);glVertex3f(18.5,-7.0,35.01);
    glVertex3f(18.5,-10.0,35.01);glVertex3f(-18.5,-10.0,35.01);
    glEnd();
    glBegin(GL_POLYGON);//batas kiri luar
    glColor3ub(106, 115, 106);
    glVertex3f(-23.51,-7.0,-32.0);glVertex3f(-23.51,-7.0,32.0);
    glVertex3f(-23.51,-10.0,32.0);glVertex3f(-23.51,-10.0,-32.0);
    glEnd();
    glBegin(GL_POLYGON);//batas blkg luar
    glColor3ub(106, 115, 106);
    glVertex3f(-19.5,-7.0,-36.01);glVertex3f(19.5,-7.0,-36.01);
    glVertex3f(19.5,-10.0,-36.01);glVertex3f(-19.5,-10.0,-36.01);
    glEnd();
    glBegin(GL_POLYGON);//batas kanan luar
    glColor3ub(106, 115, 106);
    glVertex3f(23.51,-7.0,-32.0);glVertex3f(23.51,-7.0,32.0);
    glVertex3f(23.51,-10.0,32.0);glVertex3f(23.51,-10.0,-32.0);
    glEnd();
    glBegin(GL_POLYGON);//batas depan luar
    glColor3ub(106, 115, 106);
    glVertex3f(-19.5,-7.0,36.01);glVertex3f(19.5,-7.0,36.01);
    glVertex3f(19.5,-10.0,36.01);glVertex3f(-19.5,-10.0,36.01);
    glEnd();
    glBegin(GL_POLYGON);//batas kiri atas
    glColor3ub(106, 115, 106);
    glVertex3f(-22.51,-7.0,-31.0);glVertex3f(-22.51,-7.0,31.0);
    glVertex3f(-23.51,-7.0,32.0);glVertex3f(-23.51,-7.0,-32.0);
    glEnd();
    glBegin(GL_POLYGON);//batas blkg atas
    glColor3ub(106, 115, 106);
    glVertex3f(-18.5,-7.0,-35.01);glVertex3f(18.5,-7.0,-35.01);
    glVertex3f(19.5,-7.0,-36.01);glVertex3f(-19.5,-7.0,-36.01);
    glEnd();
    glBegin(GL_POLYGON);//batas kanan atas
    glColor3ub(106, 115, 106);
    glVertex3f(22.51,-7.0,-31.0);glVertex3f(22.51,-7.0,31.0);
    glVertex3f(23.51,-7.0,32.0);glVertex3f(23.51,-7.0,-32.0);
    glEnd();
    glBegin(GL_POLYGON);//batas depan atas
    glColor3ub(106, 115, 106);
    glVertex3f(-18.5,-7.0,35.01);glVertex3f(18.5,-7.0,35.01);
    glVertex3f(19.5,-7.0,36.01);glVertex3f(-19.5,-7.0,36.01);
    glEnd();
}

void init(void)
{
    glClearColor(0.0, 0.0, 0.0, 0.0);
    glMatrixMode(GL_PROJECTION);
    glEnable(GL_DEPTH_TEST);
    is_depth = 1;
    glMatrixMode(GL_MODELVIEW);
    glPointSize(10.0);
}
void hilang(void)
{
    glClear(GL_DEPTH_BUFFER_BIT | GL_COLOR_BUFFER_BIT);
    lapangan();
    detailinglapangan();bataslapangan();
    glPushMatrix();
    glPopMatrix();
    glutSwapBuffers();;
}
void tampil(void)
{
    glClear(GL_DEPTH_BUFFER_BIT | GL_COLOR_BUFFER_BIT);
    lapangan();
    detailinglapangan();bataslapangan();
    glPushMatrix();
    glPopMatrix();
    glutSwapBuffers();;
}
void display(void)
{
    if (is_depth)
        tampil();
    else
        hilang();
}
void keyboard(unsigned char key, int x, int y)
{
    switch(key)
    {
        case'+'://kamera maju
            glTranslatef(0.0, 0.0, 3.0);
            break;
        case'-'://kamera mundur
            glTranslatef(0.0, 0.0, -3.0);
            break;
        case'd'://kamera geser kanan
        case'D':
            glTranslatef(-3.0, 0.0, 0.0);
            break;
        case'a'://kamera geser kiri
        case'A':
            glTranslatef(3.0, 0.0, 0.0);
            break;
        case'7'://kamera turun
            glTranslatef(0.0, 3.0, 0.0);
            break;
        case'9'://kamera naik
            glTranslatef(0.0, -3.0, 0.0);
            break;
        case'2'://kamera putar vertikal naik
            glRotatef(2.0, 1.0, 0.0, 0.0);
            break;
        case'8'://kamera putar vertikal turun
            glRotatef(-2.0, 1.0, 0.0, 0.0);
            break;
        case'6'://kamera putar horizontal kanan
            glRotatef(-2.0, 0.0, 1.0, 0.0);
            break;
        case'4'://kamera putar horizontal kiri
            glRotatef(2.0, 0.0, 1.0, 0.0);
            break;
        case'1'://kamera putar miring kiri
            glRotatef(2.0, 0.0, 0.0, 1.0);
            break;
        case'3'://kamera putar miring kanan
            glRotatef(-2.0, 0.0, 0.0, 1.0);
            break;
        case'5'://buka atap
            if(is_depth)
            {
                is_depth = 0;
                tampil();
            }
            else
            {
                is_depth = 1;
                hilang();
            }
            break;
    }
    display();
}
void idle()
{
    if (!mouseDown)
    {
        xrot == 0.3f;
        yrot == 0.4f;
    }
    glutPostRedisplay();
}
void mouse(int button, int state, int x, int y)
{

    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
    {
        mouseDown = true;
        xdiff = x - yrot;
        ydiff = -y + xrot;
    }
    else
        mouseDown = false;
}
void lookat()
{
    glLoadIdentity();
    gluLookAt(0.0f, 0.0f, 3.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f);
    glRotatef(xrot, 1.0f,0.0f, 0.0f);
    glRotatef(yrot, 0.0f, 1.0f, 0.0f);
}
void mouseMotion(int x, int y)
{
    lookat();
    if (mouseDown)
    {
        yrot = x - xdiff;
        xrot = y + ydiff;
        glutPostRedisplay();
    }
}
void ukuran(int lebar, int tinggi)
{
    if(tinggi == 0) tinggi = 1;
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(100, lebar / tinggi, 5, 500);
    glTranslatef(0, 0, -225);
    glMatrixMode(GL_MODELVIEW);
}
int main(int argc, char **argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE);
    glutInitWindowSize(1100,900);
    glutInitWindowPosition(250, 80);
    glutCreateWindow("TR Grafkom L Asdos - 672018335 672018336 672018360 - Kelompok 9");
    init();
    glutDisplayFunc(display);
    glutKeyboardFunc(keyboard);
    glutMouseFunc(mouse);
    glutMotionFunc(mouseMotion);
    glutReshapeFunc(ukuran);
    glutMainLoop();
    return 0;
}
